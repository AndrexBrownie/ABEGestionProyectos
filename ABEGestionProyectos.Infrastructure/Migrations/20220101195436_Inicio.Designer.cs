// <auto-generated />
using System;
using ABEGestionProyectos.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ABEGestionProyectos.Infrastructure.Migrations
{
    [DbContext(typeof(GestionProyectosDBContext))]
    [Migration("20220101195436_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Chore", b =>
                {
                    b.Property<int>("ChoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UserHistoryID")
                        .HasColumnType("int");

                    b.HasKey("ChoreID");

                    b.HasIndex("PersonID");

                    b.HasIndex("UserHistoryID");

                    b.ToTable("Chores");

                    b.HasData(
                        new
                        {
                            ChoreID = 1,
                            Name = "Llenado BD",
                            PersonID = 1,
                            Points = 3,
                            State = "En proceso",
                            UserHistoryID = 1
                        },
                        new
                        {
                            ChoreID = 2,
                            Name = "Llenado tablas",
                            PersonID = 2,
                            Points = 5,
                            State = "Por empezar",
                            UserHistoryID = 2
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Epic", b =>
                {
                    b.Property<int>("EpicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("EpicID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Epics");

                    b.HasData(
                        new
                        {
                            EpicID = 1,
                            Name = "Gestión de la BD",
                            ProjectID = 1
                        },
                        new
                        {
                            EpicID = 2,
                            Name = "Gestión de UI",
                            ProjectID = 2
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("PersonID");

                    b.HasIndex("RoleID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Name = "Ronal Estrada",
                            RoleID = 1
                        },
                        new
                        {
                            PersonID = 2,
                            Name = "Andre Maylle",
                            RoleID = 2
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Responsible")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            Description = "juego para moviles",
                            Name = "CRAPS",
                            Responsible = "ABE",
                            StartDate = new DateTime(2021, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "App para Android"
                        },
                        new
                        {
                            ProjectID = 2,
                            Description = "juego para moviles",
                            Name = "4 PALABRAS",
                            Responsible = "ABE",
                            StartDate = new DateTime(2021, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "App para Android"
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Name = "Informador"
                        },
                        new
                        {
                            RoleID = 2,
                            Name = "Desarrollador"
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Sprint", b =>
                {
                    b.Property<int>("SprintID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("SprintID");

                    b.ToTable("Sprints");

                    b.HasData(
                        new
                        {
                            SprintID = 1,
                            Estate = "Por empezar",
                            Name = "G3 - Modelado",
                            Points = 3
                        },
                        new
                        {
                            SprintID = 2,
                            Estate = "En proceso",
                            Name = "G3 - Productos",
                            Points = 5
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.UserHistory", b =>
                {
                    b.Property<int>("UserHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EpicID")
                        .HasColumnType("int");

                    b.Property<string>("Estimate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IAsA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("INeed")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SoThat")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SprintID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UserHistoryID");

                    b.HasIndex("EpicID");

                    b.HasIndex("SprintID");

                    b.ToTable("UserHistories");

                    b.HasData(
                        new
                        {
                            UserHistoryID = 1,
                            EpicID = 1,
                            Estimate = "8",
                            IAsA = "Admin",
                            INeed = "Ver un listado de productos completo",
                            Priority = "Alta",
                            SoThat = "Atender las consultas de los clientes",
                            SprintID = 1,
                            Title = "Listado de Productos"
                        },
                        new
                        {
                            UserHistoryID = 2,
                            EpicID = 2,
                            Estimate = "5",
                            IAsA = "Admin",
                            INeed = "Ver un listado de modelados completo",
                            Priority = " Muy Alta",
                            SoThat = "Atender las consultas de los usuarios",
                            SprintID = 2,
                            Title = "Listado de modelados"
                        });
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Chore", b =>
                {
                    b.HasOne("ABEGestionProyectos.Core.Models.Person", "Person")
                        .WithMany("Chores")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABEGestionProyectos.Core.Models.UserHistory", "UserHistory")
                        .WithMany("Chores")
                        .HasForeignKey("UserHistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("UserHistory");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Epic", b =>
                {
                    b.HasOne("ABEGestionProyectos.Core.Models.Project", "Project")
                        .WithMany("Epics")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Person", b =>
                {
                    b.HasOne("ABEGestionProyectos.Core.Models.Role", "Role")
                        .WithMany("People")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.UserHistory", b =>
                {
                    b.HasOne("ABEGestionProyectos.Core.Models.Epic", "Epic")
                        .WithMany("UserHistories")
                        .HasForeignKey("EpicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABEGestionProyectos.Core.Models.Sprint", "Sprint")
                        .WithMany("UserHistories")
                        .HasForeignKey("SprintID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Epic");

                    b.Navigation("Sprint");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Epic", b =>
                {
                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Person", b =>
                {
                    b.Navigation("Chores");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Project", b =>
                {
                    b.Navigation("Epics");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Role", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.Sprint", b =>
                {
                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("ABEGestionProyectos.Core.Models.UserHistory", b =>
                {
                    b.Navigation("Chores");
                });
#pragma warning restore 612, 618
        }
    }
}
